import { z } from 'zod'
import { linkModel, LinkModel } from '@/schemas/linkModel.generated.tsx'
import { enquiryAddressModel, EnquiryAddressModel } from '@/schemas/enquiryAddressModel.generated.tsx'
import { enquiryBuyingModel, EnquiryBuyingModel } from '@/schemas/enquiryBuyingModel.generated.tsx'
import { enquiryRentingModel, EnquiryRentingModel } from '@/schemas/enquiryRentingModel.generated.tsx'

/** Representation of an enquiry */
export const enquiryModel = /** Representation of an enquiry */
z.object({_links: z.record(z.string(), linkModel).optional(), _embedded: z.record(z.string(), z.object({})).optional(), id: /** The unique identifier of the enquiry */
z.number().int().optional(), created: /** The date and time when the enquiry was created */
z.string().optional(), modified: /** The date and time when the enquiry was last modified */
z.string().optional(), title: /** The title of the individual making the enquiry */
z.string().optional(), forename: /** The forename of the individual making the enquiry */
z.string().optional(), surname: /** The surname of the individual making the enquiry */
z.string().optional(), enquiryType: /** The type of enquiry. Enquiries can created for applicants interested in buying/renting, as well as prospective vendors and landlords (salesApplicant/lettingsApplicant/salesProperty/lettingsProperty) */
z.string().optional(), message: /** Textual information about the nature of the enquiry - usually the message text from the individual making the enquiry */
z.string().optional(), status: /** The status of the enquiry (pending/added/rejected/alreadyExists/duplicateEntry/spam) */
z.string().optional(), marketingConsent: /** The marketing consent status of the individual making the enquiry (grant/deny/notAsked) */
z.string().optional(), position: /** The selling position of the individual making the enquiry (renting/instructedThisAgent/instructedOtherAgent/privateSale/notOnMarket) */
z.string().optional(), officeId: /** The unique identifier of the office related to the enquiry */
z.string().optional(), applicantId: /** The unique identifier of the applicant related to the enquiry */
z.string().optional(), negotiatorId: /** The unique identifier of the negotiator related to the enquiry */
z.string().optional(), sourceName: /** The name of the source that the enquiry was generated by */
z.string().optional(), homePhone: /** The home phone number of the individual making the enquiry */
z.string().optional(), workPhone: /** The work phone number of the individual making the enquiry */
z.string().optional(), mobilePhone: /** The mobile phone number of the individual making the enquiry */
z.string().optional(), email: /** The email of the individual making the enquiry */
z.string().optional(), address: enquiryAddressModel.optional(), buying: enquiryBuyingModel.optional(), renting: enquiryRentingModel.optional(), bedrooms: /** The number of bedrooms the prospective buyer or tenant requires */
z.number().int().optional(), propertyIds: /** A list of unique property identifiers that this enquiry relates to. Used to indicate the properties that a sales or lettings applicant has expressed an interest in */
z.array(z.string()).optional(), _eTag: /** The ETag for the current version of the enquiry. Used for managing update concurrency */
z.string().optional()});
/** Representation of an enquiry */
export type EnquiryModel = /** Representation of an enquiry */
{_links?: Record<string, LinkModel> | undefined, _embedded?: Record<string, Record<string, never>> | undefined, id?: /** The unique identifier of the enquiry */
number | undefined, created?: /** The date and time when the enquiry was created */
string | undefined, modified?: /** The date and time when the enquiry was last modified */
string | undefined, title?: /** The title of the individual making the enquiry */
string | undefined, forename?: /** The forename of the individual making the enquiry */
string | undefined, surname?: /** The surname of the individual making the enquiry */
string | undefined, enquiryType?: /** The type of enquiry. Enquiries can created for applicants interested in buying/renting, as well as prospective vendors and landlords (salesApplicant/lettingsApplicant/salesProperty/lettingsProperty) */
string | undefined, message?: /** Textual information about the nature of the enquiry - usually the message text from the individual making the enquiry */
string | undefined, status?: /** The status of the enquiry (pending/added/rejected/alreadyExists/duplicateEntry/spam) */
string | undefined, marketingConsent?: /** The marketing consent status of the individual making the enquiry (grant/deny/notAsked) */
string | undefined, position?: /** The selling position of the individual making the enquiry (renting/instructedThisAgent/instructedOtherAgent/privateSale/notOnMarket) */
string | undefined, officeId?: /** The unique identifier of the office related to the enquiry */
string | undefined, applicantId?: /** The unique identifier of the applicant related to the enquiry */
string | undefined, negotiatorId?: /** The unique identifier of the negotiator related to the enquiry */
string | undefined, sourceName?: /** The name of the source that the enquiry was generated by */
string | undefined, homePhone?: /** The home phone number of the individual making the enquiry */
string | undefined, workPhone?: /** The work phone number of the individual making the enquiry */
string | undefined, mobilePhone?: /** The mobile phone number of the individual making the enquiry */
string | undefined, email?: /** The email of the individual making the enquiry */
string | undefined, address?: EnquiryAddressModel | undefined, buying?: EnquiryBuyingModel | undefined, renting?: EnquiryRentingModel | undefined, bedrooms?: /** The number of bedrooms the prospective buyer or tenant requires */
number | undefined, propertyIds?: /** A list of unique property identifiers that this enquiry relates to. Used to indicate the properties that a sales or lettings applicant has expressed an interest in */
Array<string> | undefined, _eTag?: /** The ETag for the current version of the enquiry. Used for managing update concurrency */
string | undefined};