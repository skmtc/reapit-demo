import { LinkModel, linkModel } from '@/schemas/linkModel.generated.tsx'
import { EnquiryAddressModel, enquiryAddressModel } from '@/schemas/enquiryAddressModel.generated.tsx'
import { EnquiryBuyingModel, enquiryBuyingModel } from '@/schemas/enquiryBuyingModel.generated.tsx'
import { EnquiryRentingModel, enquiryRentingModel } from '@/schemas/enquiryRentingModel.generated.tsx'
import { z } from 'zod'

export type EnquiryModel =
  /** Representation of an enquiry */
  {
    _links?: Record<string, LinkModel> | null | undefined
    _embedded?: Record<string, Record<string, never>> | null | undefined
    id?: /** The unique identifier of the enquiry */ number | null | undefined
    created?: /** The date and time when the enquiry was created */ string | null | undefined
    modified?: /** The date and time when the enquiry was last modified */ string | null | undefined
    title?: /** The title of the individual making the enquiry */ string | null | undefined
    forename?: /** The forename of the individual making the enquiry */ string | null | undefined
    surname?: /** The surname of the individual making the enquiry */ string | null | undefined
    enquiryType?:
      | /** The type of enquiry. Enquiries can created for applicants interested in buying/renting, as well as prospective vendors and landlords (salesApplicant/lettingsApplicant/salesProperty/lettingsProperty) */
      string
      | null
      | undefined
    message?:
      | /** Textual information about the nature of the enquiry - usually the message text from the individual making the enquiry */
      string
      | null
      | undefined
    status?:
      | /** The status of the enquiry (pending/added/rejected/alreadyExists/duplicateEntry/spam) */
      string
      | null
      | undefined
    marketingConsent?:
      | /** The marketing consent status of the individual making the enquiry (grant/deny/notAsked) */
      string
      | null
      | undefined
    position?:
      | /** The selling position of the individual making the enquiry (renting/instructedThisAgent/instructedOtherAgent/privateSale/notOnMarket) */
      string
      | null
      | undefined
    officeId?: /** The unique identifier of the office related to the enquiry */ string | null | undefined
    applicantId?: /** The unique identifier of the applicant related to the enquiry */ string | null | undefined
    negotiatorId?: /** The unique identifier of the negotiator related to the enquiry */ string | null | undefined
    sourceName?: /** The name of the source that the enquiry was generated by */ string | null | undefined
    homePhone?: /** The home phone number of the individual making the enquiry */ string | null | undefined
    workPhone?: /** The work phone number of the individual making the enquiry */ string | null | undefined
    mobilePhone?: /** The mobile phone number of the individual making the enquiry */ string | null | undefined
    email?: /** The email of the individual making the enquiry */ string | null | undefined
    address?: EnquiryAddressModel | null | undefined
    buying?: EnquiryBuyingModel | null | undefined
    renting?: EnquiryRentingModel | null | undefined
    bedrooms?: /** The number of bedrooms the prospective buyer or tenant requires */ number | null | undefined
    propertyIds?:
      | /** A list of unique property identifiers that this enquiry relates to. Used to indicate the properties that a sales or lettings applicant has expressed an interest in */
      Array<string>
      | null
      | undefined
    _eTag?:
      | /** The ETag for the current version of the enquiry. Used for managing update concurrency */
      string
      | null
      | undefined
  }
/** Representation of an enquiry */
export const enquiryModel =
  /** Representation of an enquiry */
  z.object({
    _links: z.record(z.string(), linkModel).optional().nullable(),
    _embedded: z.record(z.string(), z.object({})).optional().nullable(),
    /** The unique identifier of the enquiry */ id: z.number().int().optional().nullable(),
    /** The date and time when the enquiry was created */ created: z.string().optional().nullable(),
    /** The date and time when the enquiry was last modified */ modified: z.string().optional().nullable(),
    /** The title of the individual making the enquiry */ title: z.string().optional().nullable(),
    /** The forename of the individual making the enquiry */ forename: z.string().optional().nullable(),
    /** The surname of the individual making the enquiry */ surname: z.string().optional().nullable(),
    /** The type of enquiry. Enquiries can created for applicants interested in buying/renting, as well as prospective vendors and landlords (salesApplicant/lettingsApplicant/salesProperty/lettingsProperty) */
    enquiryType: z.string().optional().nullable(),
    /** Textual information about the nature of the enquiry - usually the message text from the individual making the enquiry */
    message: z.string().optional().nullable(),
    /** The status of the enquiry (pending/added/rejected/alreadyExists/duplicateEntry/spam) */
    status: z.string().optional().nullable(),
    /** The marketing consent status of the individual making the enquiry (grant/deny/notAsked) */
    marketingConsent: z.string().optional().nullable(),
    /** The selling position of the individual making the enquiry (renting/instructedThisAgent/instructedOtherAgent/privateSale/notOnMarket) */
    position: z.string().optional().nullable(),
    /** The unique identifier of the office related to the enquiry */ officeId: z.string().optional().nullable(),
    /** The unique identifier of the applicant related to the enquiry */ applicantId: z.string().optional().nullable(),
    /** The unique identifier of the negotiator related to the enquiry */
    negotiatorId: z.string().optional().nullable(),
    /** The name of the source that the enquiry was generated by */ sourceName: z.string().optional().nullable(),
    /** The home phone number of the individual making the enquiry */ homePhone: z.string().optional().nullable(),
    /** The work phone number of the individual making the enquiry */ workPhone: z.string().optional().nullable(),
    /** The mobile phone number of the individual making the enquiry */ mobilePhone: z.string().optional().nullable(),
    /** The email of the individual making the enquiry */ email: z.string().optional().nullable(),
    address: enquiryAddressModel.optional().nullable(),
    buying: enquiryBuyingModel.optional().nullable(),
    renting: enquiryRentingModel.optional().nullable(),
    /** The number of bedrooms the prospective buyer or tenant requires */
    bedrooms: z.number().int().optional().nullable(),
    /** A list of unique property identifiers that this enquiry relates to. Used to indicate the properties that a sales or lettings applicant has expressed an interest in */
    propertyIds: z.array(z.string()).optional().nullable(),
    /** The ETag for the current version of the enquiry. Used for managing update concurrency */
    _eTag: z.string().optional().nullable(),
  })
